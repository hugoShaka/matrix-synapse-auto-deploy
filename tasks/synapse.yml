---
    - name: Install packages needed by synapse
      action: "apt pkg={{item}} state=installed"
      with_items:
       - build-essential
       - python2.7-dev
       - libffi-dev
       - python-pip
       - python-setuptools
       - sqlite3
       - libssl-dev
       - python-virtualenv
       - python3-openssl
       - libjpeg-dev

    - name: Create synapse user
      user: "name={{ username }} shell=/bin/bash comment='{{ username }}'"

    - name: Creating venv and PIP to upgrade setup tools
      pip: 
        name: setuptools
        virtualenv: "/home/{{ username }}/.synapse"
        virtualenv_python: python2.7
        extra_args: '--upgrade'

    - name: Install requirements into the venv
      pip:
        name: "{{item}}"
        virtualenv: "/home/{{ username }}/.synapse"
      with_items:
        - cryptography
        - pyasn1_modules
        - characteristic
        - simplejson
        - canonicaljson

    - name: PIP to install synapse from Git Repo into virtualenv
      pip:
        name: "{{ git_repo }}"
        virtualenv: "/home/{{ username }}/.synapse"

    - name: PIP rollback to ldap3 v1.4 (hotfix)
      pip:
        name: "ldap3==1.4"
        virtualenv: "/home/{{ username }}/.synapse"

    - name: Detecting previous install
      stat: path="/home/{{ username }}/.synapse/homeserver.yaml"
      register: previous_configfile

    - name: Detecting the homeserver name of the previous install
      command: grep "server_name" homeserver.yaml | cut -d "\"" -f2
      args:
        chdir: "/home/{{ username }}/.synapse/"
      register: previous_homeserver_name
      when: previous_configfile.stat.exists

    - name: Generate homeserver.yaml config file and dummy certs
      shell: ". bin/activate && python -m synapse.app.homeserver --server-name {{ hostname }} --config-path homeserver.yaml --generate-config --report-stats=yes"
      args:
        chdir: "/home/{{ username }}/.synapse/"
      when: "(not previous_config_file.stat.exists) or previous_homeserver_name != {{ hostname }}"

    - name: Configure if registrations are enabled by default or not
      lineinfile: "dest=/home/{{ username }}/.synapse/homeserver.yaml"
      args:
        regexp: "^enable_registration:"
        line: "enable_registration: {{ enable_registration }}"

    - name: Configure if captchas are enabled by default or not
      lineinfile: "dest=/home/{{ username }}/.synapse/homeserver.yaml"
      args:
        regexp: "^enable_registration_captcha:"
        line: "enable_registration_captcha: {{ enable_registration_captcha }}"

    - name: Configure private-key recaptcha key
      lineinfile: "dest=/home/{{ username }}/.synapse/homeserver.yaml"
      args:
        regexp: "^recaptcha_private_key:"
        line: "recaptcha_private_key: {{ recaptcha_private_key }}"

    - name: Configure public-key recaptcha key
      lineinfile: "dest=/home/{{ username }}/.synapse/homeserver.yaml"
      args:
        regexp: "^recaptcha_public_key:"
        line: "recaptcha_public_key: {{ recaptcha_public_key }}"

    - name: Configure TLS fullchain location
      lineinfile: "dest=/home/{{ username }}/.synapse/homeserver.yaml"
      args:
        regexp: "^tls_certificate_path:"
        line: "tls_certificate_path: {{ absolute_path_certificate }}"

    - name: Configure TLS private key location
      lineinfile: "dest=/home/{{ username }}/.synapse/homeserver.yaml"
      args:
        regexp: "^tls_private_key_path:"
        line: "tls_private_key_path: {{ absolute_path_key }}"

    - name: Configure Diffie-Hellman parameters location
      lineinfile: "dest=/home/{{ username }}/.synapse/homeserver.yaml"
      args:
        regexp: "^tls_private_key_path:"
        line: "tls_dh_params_path: {{ DH_params_location }}"

    - name: Configure turn_uris
      lineinfile: "dest=/home/{{ username }}/.synapse/homeserver.yaml"
      args:
        line: "turn_uris: [ \"turn:{{ hostname }}:3478?transport=udp\", \"turn:{{ hostname }}:3478?transport=tcp\" ]"

    - name: Configure turn_shared_secret
      lineinfile: "dest=/home/{{ username }}/.synapse/homeserver.yaml"
      args:
        line: "turn_shared_secret: {{ turn_shared_secret }}"

    - name: Configure turn_user_lifetime
      lineinfile: "dest=/home/{{ username }}/.synapse/homeserver.yaml"
      args:
        line: "turn_user_lifetime: 86400000"

    - name: Set permissions
      file:
        path: '/home/{{ username }}/.synapse'
        state: directory
        owner: "{{ username }}"
        group: "{{ username }}"
        recurse: yes

    - name: Install systemd conf
      template:
        src: etc/systemd/system/synapse.service.j2
        dest: /etc/systemd/system/synapse.service
        mode: 0644
      register: synapse_daemon

    - name: Reloading Daemons
      command: systemctl daemon-reload
      when: synapse_daemon.changed

    - name: Enabling service
      service:
        name: synapse
        state: started
        enabled: yes

